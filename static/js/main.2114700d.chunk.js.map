{"version":3,"sources":["components/CompletedListEntry.js","components/CompletedList.js","components/Input.js","components/TodoListEntry.js","components/TodoList.js","components/CategoryEntry.js","components/Category.js","components/Search.js","components/Nav.js","components/SearchListEntry.js","components/SearchList.js","components/App.js","index.js"],"names":["CompletedListEntry","props","state","isHover","handleOnMouseEnter","bind","handleOnMouseLeave","handleOnClickButton","handleOnClickLabel","e","this","setState","removeTodo","todo","id","toggleTodoComplete","className","onMouseEnter","onMouseLeave","onClick","text","React","Component","CompletedList","isShowList","handleClick","setIsShowListFalse","completedTodoList","length","map","key","completed","Input","inputRef","createRef","handleChange","handleEnterEvent","handleBlurEvent","target","value","calledByCategory","updateCategoryName","category","updateTodoText","changeEditableState","liftStates","current","focus","setDefaultText","ref","type","onChange","onKeyPress","onBlur","TodoListEntry","isEditable","handleOnClickText","TodoList","textInput","updateTodoList","currentCategory","name","currentCategoryTodoList","placeholder","CategoryEntry","handleOnDoubleClickText","viewCurrentCategoryTodoList","setSearchingToFalse","removeCategory","onDoubleClick","Category","categories","updateCategory","newCategory","concat","targetCategory","removedArr","filter","newName","changedArr","sort","a","b","Search","searchTodo","Nav","SearchListEntry","isComplete","SearchList","searchResult","App","todoList","isSearching","todoArr","newTodo","updatedArr","completedTodo","updatedTodo","forEach","word","searchTitle","regex","RegExp","targetTodosArr","match","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2114700d.chunk.js","sourcesContent":["import React from 'react';\n\nclass CompletedListEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHover: false,\n    };\n\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleOnMouseLeave = this.handleOnMouseLeave.bind(this);\n    this.handleOnClickButton = this.handleOnClickButton.bind(this);\n    this.handleOnClickLabel = this.handleOnClickLabel.bind(this);\n  }\n\n  handleOnMouseEnter(e) {\n    this.setState({\n      isHover: true,\n    });\n  }\n\n  handleOnMouseLeave(e) {\n    this.setState({\n      isHover: false,\n    });\n  }\n\n  handleOnClickButton(e) {\n    this.props.removeTodo(this.props.todo.id);\n  }\n\n  handleOnClickLabel(e) {\n    this.props.toggleTodoComplete(this.props.todo.id);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"todoList-entry\"\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n      >\n        <div className=\"todoList-label-complete\" onClick={this.handleOnClickLabel}></div>\n        <p className=\"complete-List-text\">{this.props.todo.text}</p>\n        {this.state.isHover ? (\n          <button className=\"btn complete delete\" onClick={this.handleOnClickButton}>\n            ×\n          </button>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CompletedListEntry;\n","import React from 'react';\nimport CompletedListEntry from './CompletedListEntry';\n\nclass CompletedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowList: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => {\n      return {\n        isShowList: !state.isShowList,\n      };\n    });\n  }\n\n  setIsShowListFalse() {\n    this.setState({\n      isShowList: false,\n    })\n  }\n\n  componentWillUnmount() {\n    this.setIsShowListFalse();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"completed-list\"\n        className={this.props.completedTodoList.length !== 0 ? 'active' : ''}\n      >\n        {this.props.completedTodoList.length > 0 ? (\n          <div className=\"completed-list-info\" onClick={this.handleClick}>\n            <p>{`완료한 일과 ${this.props.completedTodoList.length}개`}</p>\n            <button className=\"btn complete-list-open\">\n              {this.state.isShowList ? '닫기' : '보기'}\n            </button>\n          </div>\n        ) : (\n          ''\n        )}\n        {this.state.isShowList\n          ? this.props.completedTodoList.map(todo => (\n              <CompletedListEntry\n                key={todo.id}\n                todo={todo}\n                completed={'completed'}\n                removeTodo={this.props.removeTodo}\n                toggleTodoComplete={this.props.toggleTodoComplete}\n              />\n            ))\n          : ''}\n      </div>\n    );\n  }\n}\n\nexport default CompletedList;\n","import React from 'react';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n\n    this.inputRef = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEnterEvent = this.handleEnterEvent.bind(this);\n    this.handleBlurEvent = this.handleBlurEvent.bind(this);\n  }\n\n  setDefaultText(text) {\n    this.setState({\n      text: text,\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  liftStates() {\n    if (this.props.calledByCategory) {\n      this.props.updateCategoryName(this.props.category, this.state.text);\n    } else {\n      this.props.updateTodoText(this.props.todo.id, this.state.text);\n    }\n    this.props.changeEditableState();\n  }\n\n  handleEnterEvent(e) {\n    if (e.key === 'Enter' && this.state.text) {\n      this.liftStates();\n    }\n  }\n\n  handleBlurEvent() {\n    if (this.state.text) {\n      this.liftStates();\n    }\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n    this.setDefaultText(this.props.text);\n  }\n\n  render() {\n    return (\n      <input\n        ref={this.inputRef}\n        type=\"text\"\n        className={this.props.calledByCategory ? 'category-input' : 'todoList-input'}\n        value={this.state.text}\n        onChange={this.handleChange}\n        onKeyPress={this.handleEnterEvent}\n        onBlur={this.handleBlurEvent}\n      />\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react';\nimport Input from './Input';\n\nclass TodoListEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      isHover: false,\n      isEditable: false,\n    };\n\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleOnMouseLeave = this.handleOnMouseLeave.bind(this);\n    this.handleOnClickButton = this.handleOnClickButton.bind(this);\n    this.handleOnClickLabel = this.handleOnClickLabel.bind(this);\n    this.handleOnClickText = this.handleOnClickText.bind(this);\n    this.changeEditableState = this.changeEditableState.bind(this);\n  }\n\n  handleOnMouseEnter() {\n    this.setState({\n      isHover: true,\n    });\n  }\n\n  handleOnMouseLeave() {\n    this.setState({\n      isHover: false,\n    });\n  }\n\n  handleOnClickButton() {\n    this.props.removeTodo(this.props.todo.id);\n  }\n\n  handleOnClickLabel() {\n    this.props.toggleTodoComplete(this.props.todo.id);\n  }\n\n  handleOnClickText() {\n    this.setState({\n      text: this.props.todo.text,\n      isEditable: true,\n    });\n  }\n\n  changeEditableState() {\n    this.setState({\n      isEditable: false,\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"todoList-entry\"\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n      >\n        <div className=\"todoList-label-inComplete\" onClick={this.handleOnClickLabel}></div>\n        {this.state.isEditable ? (\n          <Input\n            text={this.state.text}\n            updateTodoText={this.props.updateTodoText}\n            todo={this.props.todo}\n            changeEditableState={this.changeEditableState}\n          />\n        ) : (\n          <p className=\"todoList-text\" onClick={this.handleOnClickText}>\n            {this.props.todo.text}\n          </p>\n        )}\n        {this.state.isHover ? (\n          <button className=\"btn delete\" onClick={this.handleOnClickButton}>\n            ×\n          </button>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TodoListEntry;\n","import React from 'react';\nimport CompletedList from './CompletedList';\nimport TodoListEntry from './TodoListEntry';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n    };\n\n    this.textInput = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEnterEvent = this.handleEnterEvent.bind(this);\n    this.handleBlurEvent = this.handleBlurEvent.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  updateTodoList() {\n    this.props.updateTodoList(this.state.text);\n    this.setState({ text: '' });\n  }\n\n  handleEnterEvent(e) {\n    if (e.key === 'Enter' && this.state.text) {\n      this.updateTodoList();\n    }\n  }\n\n  handleBlurEvent() {\n    if (this.state.text) {\n      this.updateTodoList();\n    }\n  }\n\n  render() {\n    return (\n      <section>\n        <div id=\"todo-list-nav\">\n          <h2>{this.props.currentCategory.name}</h2>\n          <button className=\"btn\" onClick={() => this.textInput.current.focus()}>\n            일과 추가\n          </button>\n        </div>\n        {this.props.completedTodoList.length > 0 ? (\n          <CompletedList\n            completedTodoList={this.props.completedTodoList}\n            toggleTodoComplete={this.props.toggleTodoComplete}\n            removeTodo={this.props.removeTodo}\n          />\n        ) : (\n          ''\n        )}\n        {this.props.currentCategoryTodoList.map(todo => (\n          <TodoListEntry\n            key={todo.id}\n            todo={todo}\n            removeTodo={this.props.removeTodo}\n            toggleTodoComplete={this.props.toggleTodoComplete}\n            updateTodoText={this.props.updateTodoText}\n          />\n        ))}\n        <div id=\"todo-default-form\">\n          <input\n            ref={this.textInput}\n            type=\"text\"\n            value={this.state.text}\n            onChange={this.handleChange}\n            onKeyPress={this.handleEnterEvent}\n            onBlur={this.handleBlurEvent}\n            placeholder=\"오늘의 일과\"\n          />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport Input from './Input';\n\nclass CategoryEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: '',\n      isEditable: false,\n      isHover: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\n    this.handleOnMouseLeave = this.handleOnMouseLeave.bind(this);\n    this.handleOnClickButton = this.handleOnClickButton.bind(this);\n    this.handleOnDoubleClickText = this.handleOnDoubleClickText.bind(this);\n    this.changeEditableState = this.changeEditableState.bind(this);\n  }\n\n  handleClick() {\n    this.props.viewCurrentCategoryTodoList(this.props.category);\n    this.props.setSearchingToFalse();\n  }\n\n  handleOnMouseEnter() {\n    this.setState({\n      isHover: true,\n    });\n  }\n\n  handleOnMouseLeave() {\n    this.setState({\n      isHover: false,\n    });\n  }\n\n  handleOnClickButton() {\n    this.props.removeCategory(this.props.category);\n  }\n\n  handleOnDoubleClickText() {\n    this.setState({\n      text: this.props.category.name,\n      isEditable: true,\n    });\n  }\n\n  changeEditableState() {\n    this.setState({\n      isEditable: false,\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"category-entry\"\n        onMouseEnter={this.handleOnMouseEnter}\n        onMouseLeave={this.handleOnMouseLeave}\n      >\n        {this.state.isEditable ? (\n          <Input\n            text={this.state.text}\n            calledByCategory=\"category\"\n            updateCategoryName={this.props.updateCategoryName}\n            category={this.props.category}\n            changeEditableState={this.changeEditableState}\n          />\n        ) : (\n          <p\n            className=\"category-text\"\n            onClick={this.handleClick}\n            onDoubleClick={this.handleOnDoubleClickText}\n          >\n            {this.props.category.name}\n          </p>\n        )}\n        {this.state.isHover && this.props.category.name !== '미분류' ? (\n          <button className=\"btn delete\" onClick={this.handleOnClickButton}>\n            ×\n          </button>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CategoryEntry;\n","import React from 'react';\nimport CategoryEntry from './CategoryEntry';\n\nclass Category extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      categories: [{ id: 0, name: '미분류' }],\n    };\n\n    this.textInput = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.updateCategory = this.updateCategory.bind(this);\n    this.handleEnterEvent = this.handleEnterEvent.bind(this);\n    this.handleBlurEvent = this.handleBlurEvent.bind(this);\n    this.removeCategory = this.removeCategory.bind(this);\n    this.updateCategoryName = this.updateCategoryName.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  id = 2;\n\n  updateCategory(text) {\n    const newCategory = {\n      id: this.id,\n      name: text,\n    };\n\n    this.setState({\n      categories: this.state.categories.concat(newCategory),\n    });\n\n    this.props.viewCurrentCategoryTodoList(newCategory);\n    this.setState({ text: '' });\n    this.id = this.id + 1;\n  }\n\n  handleEnterEvent(e) {\n    if (e.key === 'Enter' && this.state.text) {\n      this.updateCategory(this.state.text);\n    }\n  }\n\n  handleBlurEvent(e) {\n    if (this.state.text) {\n      this.updateCategory(this.state.text);\n    }\n  }\n\n  removeCategory(targetCategory) {\n    const removedArr = this.state.categories.filter(\n      category => category.name !== targetCategory.name,\n    );\n    this.setState({\n      categories: removedArr,\n    });\n    this.props.removeCategory(targetCategory);\n  }\n\n  updateCategoryName(targetCategory, newName) {\n    targetCategory.name = newName;\n    const changedArr = this.state.categories\n      .filter(category => category.id !== targetCategory.id)\n      .concat(targetCategory);\n\n    changedArr.sort((a, b) => a.id - b.id);\n\n    this.setState({\n      categories: changedArr,\n    });\n    this.props.updateCategoryName(targetCategory);\n  }\n\n  render() {\n    return (\n      <div id=\"category-wrapper\">\n        <button className=\"btn add-category\" onClick={() => this.textInput.current.focus()}>\n          카테고리 추가\n        </button>\n        {this.state.categories.map(category => (\n          <CategoryEntry\n            key={category.id}\n            category={category}\n            viewCurrentCategoryTodoList={this.props.viewCurrentCategoryTodoList}\n            removeCategory={this.removeCategory}\n            updateCategoryName={this.updateCategoryName}\n            setSearchingToFalse={this.props.setSearchingToFalse}\n          />\n        ))}\n        <div id=\"category-default-form\">\n          <input\n            ref={this.textInput}\n            type=\"text\"\n            id=\"category-default-input\"\n            value={this.state.text}\n            onChange={this.handleChange}\n            onKeyPress={this.handleEnterEvent}\n            onBlur={this.handleBlurEvent}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React from 'react';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEnterEvent = this.handleEnterEvent.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.searchTodo(e.target.value);\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  handleEnterEvent(e) {\n    if (e.key === 'Enter' && this.state.text) {\n      this.props.searchTodo(e.target.value);\n    }\n  }\n\n  render() {\n    return (\n      <input\n        id=\"search-input\"\n        type=\"text\"\n        value={this.state.text}\n        onChange={this.handleChange}\n        onKeyPress={this.handleEnterEvent}\n        placeholder=\"검색\"\n      />\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport Category from './Category';\nimport Search from './Search';\n\nconst Nav = props => {\n  return (\n    <nav>\n      <Search searchTodo={props.searchTodo} />\n      <Category\n        viewCurrentCategoryTodoList={props.viewCurrentCategoryTodoList}\n        removeCategory={props.removeCategory}\n        updateCategoryName={props.updateCategoryName}\n        setSearchingToFalse={props.setSearchingToFalse}\n      />\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\n\nconst SearchListEntry = props => {\n  const handleClick = () => {\n    props.viewCurrentCategoryTodoList(props.todo.category);\n    props.setSearchingToFalse();\n  };\n\n  return (\n    <div className=\"search-result-wrapper\" onClick={handleClick}>\n      <div className=\"search-result-category-name\">{props.todo.category.name}</div>\n      <div className=\"todoList-entry\">\n        <div\n          className={props.todo.isComplete ? 'search-label-complete' : 'search-label-inComplete'}\n        ></div>\n        <p className=\"todoList-text\">{props.todo.text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchListEntry;\n","import React from 'react';\nimport SearchListEntry from './SearchListEntry';\n\nconst SearchList = props => {\n  return (\n    <section>\n      <div id=\"todo-list-nav\">\n        <h2>{props.currentCategory.name}</h2>\n      </div>\n      {props.searchResult.map(todo => (\n        <SearchListEntry\n          key={todo.id}\n          todo={todo}\n          viewCurrentCategoryTodoList={props.viewCurrentCategoryTodoList}\n          setSearchingToFalse={props.setSearchingToFalse}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default SearchList;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Nav from './Nav';\nimport SearchList from './SearchList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      currentCategoryTodoList: [],\n      currentCategory: { id: 1, name: '미분류' },\n      completedTodoList: [],\n      searchResult: [],\n      isSearching: false,\n    };\n\n    this.viewCurrentCategoryTodoList = this.viewCurrentCategoryTodoList.bind(this);\n    this.updateTodoList = this.updateTodoList.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.removeCategory = this.removeCategory.bind(this);\n    this.toggleTodoComplete = this.toggleTodoComplete.bind(this);\n    this.updateTodoText = this.updateTodoText.bind(this);\n    this.updateCategoryName = this.updateCategoryName.bind(this);\n    this.searchTodo = this.searchTodo.bind(this);\n    this.setSearchingToFalse = this.setSearchingToFalse.bind(this);\n  }\n\n  id = 0;\n\n  viewCurrentCategoryTodoList(category, todoArr = this.state.todoList, searchResult = []) {\n    this.setState({\n      todoList: todoArr,\n      currentCategory: category,\n      currentCategoryTodoList: todoArr.filter(\n        todo => todo.category.name === category.name && todo.isComplete === false,\n      ),\n      completedTodoList: todoArr.filter(\n        todo => todo.category.name === category.name && todo.isComplete === true,\n      ),\n      searchResult: searchResult,\n    });\n  }\n\n  updateTodoList(text) {\n    const newTodo = {\n      id: this.id,\n      text: text,\n      category: this.state.currentCategory,\n      isComplete: false,\n    };\n    const updatedArr = this.state.todoList.concat(newTodo);\n    this.id = this.id + 1;\n    this.viewCurrentCategoryTodoList(this.state.currentCategory, updatedArr);\n  }\n\n  removeTodo(id) {\n    const removedArr = this.state.todoList.filter(todo => todo.id !== id);\n    this.viewCurrentCategoryTodoList(this.state.currentCategory, removedArr);\n  }\n\n  removeCategory(category) {\n    const removedArr = this.state.todoList.filter(todo => todo.category.name !== category.name);\n    this.viewCurrentCategoryTodoList({ id: 0, name: '미분류' }, removedArr);\n  }\n\n  toggleTodoComplete(id) {\n    const completedTodo = this.state.todoList.filter(todo => todo.id === id)[0];\n    completedTodo.isComplete = !completedTodo.isComplete;\n    const changedArr = this.state.todoList.filter(todo => todo.id !== id).concat(completedTodo);\n    changedArr.sort((a, b) => a.id - b.id);\n\n    this.viewCurrentCategoryTodoList(this.state.currentCategory, changedArr);\n  }\n\n  updateTodoText(id, text) {\n    const updatedTodo = this.state.todoList.filter(todo => todo.id === id)[0];\n    updatedTodo.text = text;\n    const changedArr = this.state.todoList.filter(todo => todo.id !== id).concat(updatedTodo);\n    changedArr.sort((a, b) => a.id - b.id);\n\n    this.viewCurrentCategoryTodoList(this.state.currentCategory, changedArr);\n  }\n\n  updateCategoryName(targetCategory) {\n    const updatedTodo = this.state.todoList.filter(todo => todo.category.id === targetCategory.id);\n    updatedTodo.forEach(todo => (todo.category.name = targetCategory.name));\n    const changedArr = this.state.todoList\n      .filter(todo => todo.category.id !== targetCategory.id)\n      .concat(updatedTodo);\n\n    changedArr.sort((a, b) => a.id - b.id);\n\n    this.viewCurrentCategoryTodoList(targetCategory, changedArr);\n  }\n\n  searchTodo(word) {\n    if (word.length > 0) {\n      this.setState({\n        isSearching: true,\n      });\n      const searchTitle = {\n        id: 0,\n        name: `'${word}'에 대한 검색결과`,\n      };\n      const regex = new RegExp(word, 'gi');\n      const targetTodosArr = this.state.todoList.filter(todo => todo.text.match(regex));\n      this.viewCurrentCategoryTodoList(searchTitle, undefined, targetTodosArr);\n    } else {\n      this.setState({\n        isSearching: false,\n      });\n      this.viewCurrentCategoryTodoList({ id: 1, name: '미분류' });\n    }\n  }\n\n  setSearchingToFalse() {\n    this.setState({\n      isSearching: false,\n    });\n  }\n\n  render() {\n    return (\n      <main>\n        <Nav\n          viewCurrentCategoryTodoList={this.viewCurrentCategoryTodoList}\n          removeCategory={this.removeCategory}\n          updateCategoryName={this.updateCategoryName}\n          searchTodo={this.searchTodo}\n          setSearchingToFalse={this.setSearchingToFalse}\n        />\n        {this.state.isSearching ? (\n          <SearchList\n            currentCategory={this.state.currentCategory}\n            searchResult={this.state.searchResult}\n            viewCurrentCategoryTodoList={this.viewCurrentCategoryTodoList}\n            setSearchingToFalse={this.setSearchingToFalse}\n          />\n        ) : (\n          <TodoList\n            currentCategory={this.state.currentCategory}\n            updateTodoList={this.updateTodoList}\n            currentCategoryTodoList={this.state.currentCategoryTodoList}\n            removeTodo={this.removeTodo}\n            removeCategory={this.removeCategory}\n            completedTodoList={this.state.completedTodoList}\n            toggleTodoComplete={this.toggleTodoComplete}\n            updateTodoText={this.updateTodoText}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}